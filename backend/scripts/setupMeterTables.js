import sequelize from '../config/database.js';

async function setupTables() {
  try {
    console.log('üîÑ Creating meter reading tables...');
    
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á meter_readings table ‡πÅ‡∏ö‡∏ö‡∏á‡πà‡∏≤‡∏¢
    await sequelize.query(`
      CREATE TABLE IF NOT EXISTS meter_readings (
        reading_id int(11) NOT NULL AUTO_INCREMENT,
        room_id int(11) NOT NULL,
        reading_month int(2) NOT NULL COMMENT '‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡∏à‡∏î (1-12)',
        reading_year int(4) NOT NULL COMMENT '‡∏õ‡∏µ‡∏ó‡∏µ‡πà‡∏à‡∏î',
        previous_water_reading decimal(10,2) DEFAULT 0.00 COMMENT '‡πÄ‡∏•‡∏Ç‡∏°‡∏¥‡πÄ‡∏ï‡∏≠‡∏£‡πå‡∏ô‡πâ‡∏≥‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏•‡πâ‡∏ß',
        current_water_reading decimal(10,2) NOT NULL COMMENT '‡πÄ‡∏•‡∏Ç‡∏°‡∏¥‡πÄ‡∏ï‡∏≠‡∏£‡πå‡∏ô‡πâ‡∏≥‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏ô‡∏µ‡πâ',
        previous_electricity_reading decimal(10,2) DEFAULT 0.00 COMMENT '‡πÄ‡∏•‡∏Ç‡∏°‡∏¥‡πÄ‡∏ï‡∏≠‡∏£‡πå‡πÑ‡∏ü‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏•‡πâ‡∏ß',
        current_electricity_reading decimal(10,2) NOT NULL COMMENT '‡πÄ‡∏•‡∏Ç‡∏°‡∏¥‡πÄ‡∏ï‡∏≠‡∏£‡πå‡πÑ‡∏ü‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏ô‡∏µ‡πâ',
        other_charges decimal(10,2) DEFAULT 0.00 COMMENT '‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢‡∏≠‡∏∑‡πà‡∏ô‡πÜ',
        other_charges_reason text COMMENT '‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢‡∏≠‡∏∑‡πà‡∏ô‡πÜ',
        meter_photo_water varchar(255) DEFAULT NULL COMMENT '‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏°‡∏¥‡πÄ‡∏ï‡∏≠‡∏£‡πå‡∏ô‡πâ‡∏≥',
        meter_photo_electricity varchar(255) DEFAULT NULL COMMENT '‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏°‡∏¥‡πÄ‡∏ï‡∏≠‡∏£‡πå‡πÑ‡∏ü',
        recorded_by int(11) NOT NULL COMMENT '‡∏ú‡∏π‡πâ‡∏à‡∏î‡∏°‡∏¥‡πÄ‡∏ï‡∏≠‡∏£‡πå (mem_id)',
        recorded_date datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
        notes text COMMENT '‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°',
        is_billed tinyint(1) DEFAULT 0 COMMENT '‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ö‡∏¥‡∏•‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡∏¢‡∏±‡∏á',
        PRIMARY KEY (reading_id),
        UNIQUE KEY unique_room_month_year (room_id, reading_month, reading_year),
        KEY idx_room_id (room_id),
        KEY idx_month_year (reading_month, reading_year),
        KEY idx_recorded_by (recorded_by)
      ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='‡∏Å‡∏≤‡∏£‡∏à‡∏î‡∏°‡∏¥‡πÄ‡∏ï‡∏≠‡∏£‡πå‡∏ô‡πâ‡∏≥‡πÅ‡∏•‡∏∞‡πÑ‡∏ü‡∏£‡∏≤‡∏¢‡πÄ‡∏î‡∏∑‡∏≠‡∏ô'
    `);
    
    console.log('‚úÖ meter_readings table created');
    
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á monthly_bills table
    await sequelize.query(`
      CREATE TABLE IF NOT EXISTS monthly_bills (
        bill_id int(11) NOT NULL AUTO_INCREMENT,
        room_id int(11) NOT NULL,
        member_id int(11) NOT NULL COMMENT '‡∏ú‡∏π‡πâ‡πÄ‡∏ä‡πà‡∏≤',
        bill_month int(2) NOT NULL COMMENT '‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏Ç‡∏≠‡∏á‡∏ö‡∏¥‡∏• (1-12)',
        bill_year int(4) NOT NULL COMMENT '‡∏õ‡∏µ‡∏Ç‡∏≠‡∏á‡∏ö‡∏¥‡∏•',
        reading_id int(11) DEFAULT NULL COMMENT '‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏°‡∏¥‡πÄ‡∏ï‡∏≠‡∏£‡πå',
        room_rent decimal(10,2) NOT NULL COMMENT '‡∏Ñ‡πà‡∏≤‡πÄ‡∏ä‡πà‡∏≤‡∏´‡πâ‡∏≠‡∏á',
        water_cost decimal(10,2) DEFAULT 0.00 COMMENT '‡∏Ñ‡πà‡∏≤‡∏ô‡πâ‡∏≥',
        electricity_cost decimal(10,2) DEFAULT 0.00 COMMENT '‡∏Ñ‡πà‡∏≤‡πÑ‡∏ü',
        other_charges decimal(10,2) DEFAULT 0.00 COMMENT '‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢‡∏≠‡∏∑‡πà‡∏ô‡πÜ',
        other_charges_reason text COMMENT '‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢‡∏≠‡∏∑‡πà‡∏ô‡πÜ',
        penalty_amount decimal(10,2) DEFAULT 0.00 COMMENT '‡∏Ñ‡πà‡∏≤‡∏õ‡∏£‡∏±‡∏ö‡∏ä‡∏≥‡∏£‡∏∞‡∏•‡πà‡∏≤‡∏ä‡πâ‡∏≤',
        penalty_days int(3) DEFAULT 0 COMMENT '‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏¢‡∏Å‡∏≥‡∏´‡∏ô‡∏î',
        due_date date NOT NULL COMMENT '‡∏ß‡∏±‡∏ô‡∏Ñ‡∏£‡∏ö‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏ä‡∏≥‡∏£‡∏∞',
        bill_status enum('draft','issued','paid','overdue','cancelled') NOT NULL DEFAULT 'draft',
        issued_date datetime DEFAULT NULL COMMENT '‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏≠‡∏≠‡∏Å‡∏ö‡∏¥‡∏•',
        paid_date datetime DEFAULT NULL COMMENT '‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ä‡∏≥‡∏£‡∏∞',
        created_by int(11) NOT NULL COMMENT '‡∏ú‡∏π‡πâ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ö‡∏¥‡∏• (mem_id)',
        created_date datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
        updated_date datetime DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP,
        PRIMARY KEY (bill_id),
        UNIQUE KEY unique_room_bill_month_year (room_id, bill_month, bill_year),
        KEY idx_room_id (room_id),
        KEY idx_member_id (member_id),
        KEY idx_bill_month_year (bill_month, bill_year),
        KEY idx_bill_status (bill_status),
        KEY idx_due_date (due_date),
        KEY idx_reading_id (reading_id)
      ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='‡∏ö‡∏¥‡∏•‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢‡∏£‡∏≤‡∏¢‡πÄ‡∏î‡∏∑‡∏≠‡∏ô'
    `);
    
    console.log('‚úÖ monthly_bills table created');
    
    // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á
    console.log('üîÑ Adding sample data...');
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ú‡∏π‡πâ‡πÄ‡∏ä‡πà‡∏≤‡πÉ‡∏ô‡∏´‡πâ‡∏≠‡∏á
    await sequelize.query(`
      UPDATE room SET current_tenant_id = 1 WHERE room_id = 1 AND current_tenant_id IS NULL;
      UPDATE room SET current_tenant_id = 2 WHERE room_id = 2 AND current_tenant_id IS NULL;  
      UPDATE room SET current_tenant_id = 3 WHERE room_id = 3 AND current_tenant_id IS NULL;
      UPDATE room SET status = '0' WHERE room_id IN (1, 2, 3) AND status != '0'
    `);
    
    // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏à‡∏î‡∏°‡∏¥‡πÄ‡∏ï‡∏≠‡∏£‡πå‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏Å‡πà‡∏≠‡∏ô (‡∏Å‡∏£‡∏Å‡∏é‡∏≤‡∏Ñ‡∏° 2025)
    await sequelize.query(`
      INSERT IGNORE INTO meter_readings 
      (room_id, reading_month, reading_year, previous_water_reading, current_water_reading, 
       previous_electricity_reading, current_electricity_reading, recorded_by, other_charges, notes)
      VALUES 
      (1, 7, 2025, 0, 100, 0, 200, 1, 0, '‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô'),
      (2, 7, 2025, 0, 80, 0, 150, 1, 0, '‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô'),
      (3, 7, 2025, 0, 120, 0, 250, 1, 0, '‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô')
    `);
    
    console.log('‚úÖ Sample data added');
    console.log('üéâ All setup completed successfully!');
    
    // ‡∏î‡∏π tables ‡∏ó‡∏µ‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏•‡πâ‡∏ß
    const tables = await sequelize.getQueryInterface().showAllTables();
    console.log('üìã Current tables:', tables);
    
  } catch (error) {
    console.error('‚ùå Error:', error.message);
    console.error('Stack:', error.stack);
  } finally {
    await sequelize.close();
    process.exit(0);
  }
}

setupTables();
