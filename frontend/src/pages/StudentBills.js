import React, { useState, useEffect } from 'react';
import Navbar from '../components/Navbar';
import PageTransition from '../components/PageTransition';
import { CardSkeleton } from '../components/LoadingEffect';
import useNotification from '../hooks/useNotification';
import { ToastContainer } from '../components/Notification';
import axios from 'axios';

const StudentBills = () => {
  const { notifications, showError } = useNotification();
  
  const [allBills, setAllBills] = useState([]); // ‡πÄ‡∏Å‡πá‡∏ö‡∏ö‡∏¥‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
  const [loading, setLoading] = useState(true);
  const [activeTab, setActiveTab] = useState('pending'); // pending, all
  const [pagination, setPagination] = useState({
    total: 0,
    limit: 10,
    offset: 0
  });

  const statusLabels = {
    draft: { label: '‡πÅ‡∏ö‡∏ö‡∏£‡πà‡∏≤‡∏á', color: 'bg-gray-100 text-gray-800' },
    issued: { label: '‡∏≠‡∏≠‡∏Å‡∏ö‡∏¥‡∏•‡πÅ‡∏•‡πâ‡∏ß', color: 'bg-yellow-100 text-yellow-800' },
    pending_approval: { label: '‡∏£‡∏≠‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥', color: 'bg-blue-100 text-blue-800' },
    paid: { label: '‡∏ä‡∏≥‡∏£‡∏∞‡πÅ‡∏•‡πâ‡∏ß', color: 'bg-green-100 text-green-800' },
    overdue: { label: '‡πÄ‡∏•‡∏¢‡∏Å‡∏≥‡∏´‡∏ô‡∏î', color: 'bg-red-100 text-red-800' },
    cancelled: { label: '‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å', color: 'bg-gray-100 text-gray-800' }
  };

  const months = [
    '‡∏°‡∏Å‡∏£‡∏≤‡∏Ñ‡∏°', '‡∏Å‡∏∏‡∏°‡∏†‡∏≤‡∏û‡∏±‡∏ô‡∏ò‡πå', '‡∏°‡∏µ‡∏ô‡∏≤‡∏Ñ‡∏°', '‡πÄ‡∏°‡∏©‡∏≤‡∏¢‡∏ô', '‡∏û‡∏§‡∏©‡∏†‡∏≤‡∏Ñ‡∏°', '‡∏°‡∏¥‡∏ñ‡∏∏‡∏ô‡∏≤‡∏¢‡∏ô',
    '‡∏Å‡∏£‡∏Å‡∏é‡∏≤‡∏Ñ‡∏°', '‡∏™‡∏¥‡∏á‡∏´‡∏≤‡∏Ñ‡∏°', '‡∏Å‡∏±‡∏ô‡∏¢‡∏≤‡∏¢‡∏ô', '‡∏ï‡∏∏‡∏•‡∏≤‡∏Ñ‡∏°', '‡∏û‡∏§‡∏®‡∏à‡∏¥‡∏Å‡∏≤‡∏¢‡∏ô', '‡∏ò‡∏±‡∏ô‡∏ß‡∏≤‡∏Ñ‡∏°'
  ];

  useEffect(() => {
    fetchBills();
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [pagination.offset]);

  const fetchBills = async () => {
    setLoading(true);
    try {
      const token = localStorage.getItem('token');
      
      const response = await axios.get(`http://localhost:5000/api/bills/my-bills`, {
        headers: { Authorization: `Bearer ${token}` },
        params: {
          limit: 50, // ‡πÄ‡∏≠‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏°‡∏≤‡∏Å‡πà‡∏≠‡∏ô
          offset: 0   // ‡πÄ‡∏≠‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
        }
      });

      // ‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
      setAllBills(response.data.bills);
      setPagination(prev => ({
        ...prev,
        total: response.data.total
      }));

    } catch (error) {
      console.error('Failed to fetch bills:', error);
      showError('‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏¥‡∏•‡πÑ‡∏î‡πâ');
    } finally {
      setLoading(false);
    }
  };

  const formatDate = (dateString) => {
    if (!dateString) return '-';
    return new Date(dateString).toLocaleDateString('th-TH');
  };

  const formatCurrency = (amount) => {
    return new Intl.NumberFormat('th-TH', {
      style: 'currency',
      currency: 'THB',
      minimumFractionDigits: 0,
      maximumFractionDigits: 2
    }).format(amount);
  };

  const handlePayment = (billId) => {
    // ‡∏ô‡∏≥‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô
    window.location.href = `/payment/${billId}`;
  };

  const isOverdue = (dueDate) => {
    return new Date(dueDate) < new Date() && new Date(dueDate).toDateString() !== new Date().toDateString();
  };

  // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏ö‡∏¥‡∏•‡∏Ñ‡πâ‡∏≤‡∏á‡∏ä‡∏≥‡∏£‡∏∞‡∏à‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
  const pendingBills = allBills.filter(bill => 
    ['issued', 'pending_approval', 'overdue'].includes(bill.bill_status)
  );

  const totalPendingAmount = pendingBills.reduce((sum, bill) => sum + bill.total_amount, 0);

  // ‡∏Å‡∏£‡∏≠‡∏á‡∏ö‡∏¥‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏ï‡∏≤‡∏° activeTab
  const displayBills = activeTab === 'pending' ? pendingBills : allBills;

  if (loading) {
    return (
      <div>
        <Navbar />
        <PageTransition>
          <div className="min-h-screen bg-gray-50 py-4 sm:py-8">
            <div className="max-w-6xl mx-auto px-4">
              <div className="space-y-4">
                {[...Array(3)].map((_, i) => (
                  <CardSkeleton key={i} rows={4} />
                ))}
              </div>
            </div>
          </div>
        </PageTransition>
      </div>
    );
  }

  return (
    <div>
      <Navbar />
      <PageTransition>
        <div className="min-h-screen bg-gray-50 py-4 sm:py-8">
          <div className="max-w-6xl mx-auto px-4">
            
            {/* ‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠ */}
            <div className="mb-6">
              <h1 className="text-2xl sm:text-3xl font-bold text-gray-900 mb-2">
                üßæ ‡∏ö‡∏¥‡∏•‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢
              </h1>
              <p className="text-gray-600">
                ‡∏î‡∏π‡∏ö‡∏¥‡∏•‡∏Ñ‡πâ‡∏≤‡∏á‡∏ä‡∏≥‡∏£‡∏∞‡πÅ‡∏•‡∏∞‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô
              </p>
            </div>

            {/* ‡∏™‡∏£‡∏∏‡∏õ‡∏ö‡∏¥‡∏•‡∏Ñ‡πâ‡∏≤‡∏á‡∏ä‡∏≥‡∏£‡∏∞ */}
            {pendingBills.length > 0 && (
              <div className="bg-gradient-to-r from-red-500 to-red-600 rounded-lg p-4 sm:p-6 mb-6 text-white">
                <div className="flex flex-col sm:flex-row items-start sm:items-center justify-between">
                  <div>
                    <h2 className="text-lg sm:text-xl font-bold mb-1">
                      ‚ö†Ô∏è ‡∏°‡∏µ‡∏ö‡∏¥‡∏•‡∏Ñ‡πâ‡∏≤‡∏á‡∏ä‡∏≥‡∏£‡∏∞
                    </h2>
                    <p className="text-red-100 text-sm">
                      ‡∏Ñ‡∏∏‡∏ì‡∏°‡∏µ‡∏ö‡∏¥‡∏•‡∏ó‡∏µ‡πà‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ä‡∏≥‡∏£‡∏∞ {pendingBills.length} ‡∏ö‡∏¥‡∏•
                    </p>
                  </div>
                  <div className="mt-3 sm:mt-0 text-right">
                    <div className="text-2xl sm:text-3xl font-bold">
                      {formatCurrency(totalPendingAmount)}
                    </div>
                    <div className="text-red-100 text-sm">‡∏¢‡∏≠‡∏î‡∏Ñ‡πâ‡∏≤‡∏á‡∏ä‡∏≥‡∏£‡∏∞‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</div>
                  </div>
                </div>
              </div>
            )}

            {/* ‡πÅ‡∏ó‡πá‡∏ö */}
            <div className="flex space-x-1 bg-gray-100 p-1 rounded-lg mb-6">
              <button
                onClick={() => setActiveTab('pending')}
                className={`flex-1 py-2 px-4 text-sm font-medium rounded-md transition-colors ${
                  activeTab === 'pending' 
                    ? 'bg-white text-gray-900 shadow-sm' 
                    : 'text-gray-600 hover:text-gray-900'
                }`}
              >
                ‡∏ö‡∏¥‡∏•‡∏Ñ‡πâ‡∏≤‡∏á‡∏ä‡∏≥‡∏£‡∏∞ ({pendingBills.length})
              </button>
              <button
                onClick={() => setActiveTab('all')}
                className={`flex-1 py-2 px-4 text-sm font-medium rounded-md transition-colors ${
                  activeTab === 'all' 
                    ? 'bg-white text-gray-900 shadow-sm' 
                    : 'text-gray-600 hover:text-gray-900'
                }`}
              >
                ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î ({allBills.length})
              </button>
            </div>

            {/* ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ö‡∏¥‡∏• */}
            <div className="space-y-4">
              {displayBills.length === 0 ? (
                <div className="text-center py-12 bg-white rounded-lg shadow">
                  <div className="text-gray-400 text-6xl mb-4">üìÑ</div>
                  <h3 className="text-lg font-medium text-gray-900 mb-2">
                    {activeTab === 'pending' ? '‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ö‡∏¥‡∏•‡∏Ñ‡πâ‡∏≤‡∏á‡∏ä‡∏≥‡∏£‡∏∞' : '‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏ö‡∏¥‡∏•'}
                  </h3>
                  <p className="text-gray-600">
                    {activeTab === 'pending' 
                      ? '‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ö‡∏¥‡∏•‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏ä‡∏≥‡∏£‡∏∞‡πÉ‡∏ô‡∏Ç‡∏ì‡∏∞‡∏ô‡∏µ‡πâ' 
                      : '‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏¥‡∏•‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö'}
                  </p>
                </div>
              ) : (
                displayBills.map((bill) => (
                  <div key={bill.bill_id} 
                       className={`bg-white rounded-lg shadow-md overflow-hidden ${
                         isOverdue(bill.due_date) ? 'border-l-4 border-red-500' : ''
                       }`}>
                    
                    {/* Desktop View */}
                    <div className="hidden lg:block">
                      <div className="p-6">
                        <div className="flex items-center justify-between mb-4">
                          <div className="flex items-center space-x-4">
                            <div>
                              <h3 className="text-lg font-semibold text-gray-900">
                                ‡∏´‡πâ‡∏≠‡∏á {bill.room.room_number}
                              </h3>
                              <p className="text-sm text-gray-600">
                                {bill.room.roomType.room_type_name} ‚Ä¢ {months[bill.bill_month - 1]} {bill.bill_year + 543}
                              </p>
                            </div>
                            <span className={`px-3 py-1 rounded-full text-xs font-medium ${
                              statusLabels[bill.bill_status]?.color || 'bg-gray-100 text-gray-800'
                            }`}>
                              {statusLabels[bill.bill_status]?.label || bill.bill_status}
                            </span>
                          </div>
                          <div className="text-right">
                            <div className="text-2xl font-bold text-gray-900">
                              {formatCurrency(bill.total_amount)}
                            </div>
                            <div className="text-sm text-gray-600">
                              ‡∏Ñ‡∏£‡∏ö‡∏Å‡∏≥‡∏´‡∏ô‡∏î: {formatDate(bill.due_date)}
                            </div>
                          </div>
                        </div>

                        <div className="grid grid-cols-4 gap-4 text-sm">
                          <div className="text-center p-3 bg-blue-50 rounded">
                            <div className="font-medium text-blue-900">‡∏Ñ‡πà‡∏≤‡πÄ‡∏ä‡πà‡∏≤‡∏´‡πâ‡∏≠‡∏á</div>
                            <div className="text-lg font-bold text-blue-600">
                              {formatCurrency(bill.room_rent)}
                            </div>
                          </div>
                          <div className="text-center p-3 bg-cyan-50 rounded">
                            <div className="font-medium text-cyan-900">‡∏Ñ‡πà‡∏≤‡∏ô‡πâ‡∏≥</div>
                            <div className="text-lg font-bold text-cyan-600">
                              {formatCurrency(bill.water_cost)}
                            </div>
                          </div>
                          <div className="text-center p-3 bg-green-50 rounded">
                            <div className="font-medium text-green-900">‡∏Ñ‡πà‡∏≤‡πÑ‡∏ü</div>
                            <div className="text-lg font-bold text-green-600">
                              {formatCurrency(bill.electricity_cost)}
                            </div>
                          </div>
                          <div className="text-center p-3 bg-purple-50 rounded">
                            <div className="font-medium text-purple-900">‡∏≠‡∏∑‡πà‡∏ô‡πÜ + ‡∏Ñ‡πà‡∏≤‡∏õ‡∏£‡∏±‡∏ö</div>
                            <div className="text-lg font-bold text-purple-600">
                              {formatCurrency(parseFloat(bill.other_charges) + parseFloat(bill.penalty_amount))}
                            </div>
                          </div>
                        </div>

                        {/* ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏° */}
                        {(bill.other_charges_reason || bill.penalty_amount > 0) && (
                          <div className="mt-4 p-3 bg-gray-50 rounded text-sm">
                            {bill.other_charges_reason && (
                              <div className="mb-2">
                                <strong>‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢‡∏≠‡∏∑‡πà‡∏ô:</strong> {bill.other_charges_reason}
                              </div>
                            )}
                            {bill.penalty_amount > 0 && (
                              <div className="text-red-600">
                                <strong>‡∏Ñ‡πà‡∏≤‡∏õ‡∏£‡∏±‡∏ö:</strong> ‡πÄ‡∏•‡∏¢‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏ä‡∏≥‡∏£‡∏∞ {bill.penalty_days} ‡∏ß‡∏±‡∏ô 
                                = {formatCurrency(bill.penalty_amount)}
                              </div>
                            )}
                          </div>
                        )}

                        {/* ‡∏õ‡∏∏‡πà‡∏°‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ */}
                        <div className="mt-4 flex justify-end space-x-3">
                          {bill.bill_status === 'issued' && (
                            <button
                              onClick={() => handlePayment(bill.bill_id)}
                              className="btn-primary"
                            >
                              üí≥ ‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô
                            </button>
                          )}
                          {bill.bill_status === 'pending_approval' && (
                            <div className="text-blue-600 font-medium">
                              ‡∏£‡∏≠‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞
                            </div>
                          )}
                          {bill.bill_status === 'paid' && (
                            <div className="text-green-600 font-medium">
                              ‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô ({formatDate(bill.paid_date)})
                            </div>
                          )}
                        </div>
                      </div>
                    </div>

                    {/* Mobile View */}
                    <div className="block lg:hidden">
                      <div className="p-4">
                        <div className="flex justify-between items-start mb-3">
                          <div>
                            <h3 className="font-semibold text-gray-900">
                              ‡∏´‡πâ‡∏≠‡∏á {bill.room.room_number}
                            </h3>
                            <p className="text-sm text-gray-600">
                              {months[bill.bill_month - 1]} {bill.bill_year + 543}
                            </p>
                          </div>
                          <span className={`px-2 py-1 rounded text-xs font-medium ${
                            statusLabels[bill.bill_status]?.color || 'bg-gray-100 text-gray-800'
                          }`}>
                            {statusLabels[bill.bill_status]?.label || bill.bill_status}
                          </span>
                        </div>

                        <div className="bg-gray-50 rounded p-3 mb-3">
                          <div className="text-2xl font-bold text-center text-gray-900 mb-2">
                            {formatCurrency(bill.total_amount)}
                          </div>
                          <div className="grid grid-cols-2 gap-2 text-xs">
                            <div className="text-center">
                              <div className="text-gray-600">‡∏Ñ‡πà‡∏≤‡πÄ‡∏ä‡πà‡∏≤</div>
                              <div className="font-medium">{formatCurrency(bill.room_rent)}</div>
                            </div>
                            <div className="text-center">
                              <div className="text-gray-600">‡∏Ñ‡πà‡∏≤‡∏ô‡πâ‡∏≥</div>
                              <div className="font-medium">{formatCurrency(bill.water_cost)}</div>
                            </div>
                            <div className="text-center">
                              <div className="text-gray-600">‡∏Ñ‡πà‡∏≤‡πÑ‡∏ü</div>
                              <div className="font-medium">{formatCurrency(bill.electricity_cost)}</div>
                            </div>
                            <div className="text-center">
                              <div className="text-gray-600">‡∏≠‡∏∑‡πà‡∏ô‡πÜ/‡∏õ‡∏£‡∏±‡∏ö</div>
                              <div className="font-medium">
                                {formatCurrency(parseFloat(bill.other_charges) + parseFloat(bill.penalty_amount))}
                              </div>
                            </div>
                          </div>
                        </div>

                        <div className="text-sm text-gray-600 mb-3">
                          <div>‡∏Ñ‡∏£‡∏ö‡∏Å‡∏≥‡∏´‡∏ô‡∏î: {formatDate(bill.due_date)}</div>
                          {isOverdue(bill.due_date) && bill.bill_status !== 'paid' && (
                            <div className="text-red-600 font-medium">
                              ‡πÄ‡∏•‡∏¢‡∏Å‡∏≥‡∏´‡∏ô‡∏î {bill.penalty_days} ‡∏ß‡∏±‡∏ô
                            </div>
                          )}
                        </div>

                        {/* ‡∏õ‡∏∏‡πà‡∏°‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ Mobile */}
                        <div className="space-y-2">
                          {bill.bill_status === 'issued' && (
                            <button
                              onClick={() => handlePayment(bill.bill_id)}
                              className="btn-primary w-full text-sm"
                            >
                              üí≥ ‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô
                            </button>
                          )}
                          {bill.bill_status === 'pending_approval' && (
                            <div className="text-center text-blue-600 font-medium text-sm py-2">
                              ‡∏£‡∏≠‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞
                            </div>
                          )}
                          {bill.bill_status === 'paid' && (
                            <div className="text-center text-green-600 font-medium text-sm py-2">
                              ‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô ({formatDate(bill.paid_date)})
                            </div>
                          )}
                        </div>
                      </div>
                    </div>
                  </div>
                ))
              )}
            </div>

            {/* Pagination */}
            {pagination.total > pagination.limit && (
              <div className="mt-6 flex justify-center items-center space-x-4">
                <button
                  onClick={() => setPagination(prev => ({ 
                    ...prev, 
                    offset: Math.max(0, prev.offset - prev.limit) 
                  }))}
                  disabled={pagination.offset === 0}
                  className="btn-secondary disabled:opacity-50"
                >
                  ‡∏Å‡πà‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤
                </button>
                <span className="text-sm text-gray-600">
                  {Math.floor(pagination.offset / pagination.limit) + 1} / {Math.ceil(pagination.total / pagination.limit)}
                </span>
                <button
                  onClick={() => setPagination(prev => ({ 
                    ...prev, 
                    offset: prev.offset + prev.limit 
                  }))}
                  disabled={pagination.offset + pagination.limit >= pagination.total}
                  className="btn-secondary disabled:opacity-50"
                >
                  ‡∏ñ‡∏±‡∏î‡πÑ‡∏õ
                </button>
              </div>
            )}

            {/* ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥ */}
            <div className="bg-blue-50 border border-blue-200 rounded-lg p-4 mt-6">
              <h4 className="text-sm font-medium text-blue-800 mb-2">üí° ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô</h4>
              <ul className="text-sm text-blue-700 space-y-1">
                <li>‚Ä¢ ‡∏Ñ‡πà‡∏≤‡∏õ‡∏£‡∏±‡∏ö‡∏ä‡∏≥‡∏£‡∏∞‡∏•‡πà‡∏≤‡∏ä‡πâ‡∏≤ 10 ‡∏ö‡∏≤‡∏ó‡∏ï‡πà‡∏≠‡∏ß‡∏±‡∏ô</li>
                <li>‚Ä¢ ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ä‡∏≥‡∏£‡∏∞‡∏ú‡πà‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏™‡∏•‡∏¥‡∏õ‡∏Å‡∏≤‡∏£‡πÇ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô</li>
                <li>‚Ä¢ ‡∏™‡∏•‡∏¥‡∏õ‡∏à‡∏∞‡∏ï‡πâ‡∏≠‡∏á‡∏ú‡πà‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡∏à‡∏≤‡∏Å‡∏ú‡∏π‡πâ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏´‡∏≠‡∏û‡∏±‡∏Å</li>
                <li>‚Ä¢ ‡∏´‡∏≤‡∏Å‡∏™‡∏•‡∏¥‡∏õ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ‡∏à‡∏∞‡∏ï‡πâ‡∏≠‡∏á‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÉ‡∏´‡∏°‡πà</li>
              </ul>
            </div>
          </div>
        </div>

        <ToastContainer notifications={notifications} />
      </PageTransition>
    </div>
  );
};

export default StudentBills;
