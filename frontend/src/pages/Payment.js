import React, { useState, useEffect } from 'react';
import { useLocation, useNavigate } from 'react-router-dom';

import Navbar from '../components/Navbar';
import PageTransition from '../components/PageTransition';
import { LoadingSpinner, LoadingButton } from '../components/LoadingEffect';
import useNotification from '../hooks/useNotification';
import { ToastContainer } from '../components/Notification';
import axios from 'axios';

const Payment = () => {
  const location = useLocation();
  const navigate = useNavigate();
  const { notifications, showSuccess, showError, showWarning } = useNotification();

  const [booking, setBooking] = useState(null);
  const [loading, setLoading] = useState(true);
  const [uploading, setUploading] = useState(false);
  const [paymentSlip, setPaymentSlip] = useState(null);
  const [slipPreview, setSlipPreview] = useState('');

  // ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å navigation state
  const { bookingId, bookingData, roomData } = location.state || {};

  useEffect(() => {
    if (!bookingId) {
      showError('‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á');
      navigate('/dormitories');
      return;
    }
    
    fetchBookingDetails();
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [bookingId]);



  const fetchBookingDetails = async () => {
    setLoading(true);
    try {
      const response = await axios.get(`http://localhost:5000/api/bookings/${bookingId}`);
      setBooking(response.data);
      
      // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô
      if (response.data.payment_status === 'paid') {
        // ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß
      } else if (response.data.payment_status === 'uploaded') {
        // ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÅ‡∏•‡πâ‡∏ß
      }
    } catch (error) {
      console.error('Failed to fetch booking:', error);
      showError('‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡πÑ‡∏î‡πâ');
      navigate('/dormitories');
    } finally {
      setLoading(false);
    }
  };



  const handleFileChange = (e) => {
    const file = e.target.files[0];
    if (!file) return;

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡πÑ‡∏ü‡∏•‡πå
    const allowedTypes = ['image/jpeg', 'image/png', 'image/jpg'];
    if (!allowedTypes.includes(file.type)) {
      showError('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏≠‡∏±‡∏û‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô (JPEG, PNG)');
      return;
    }

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡∏ô‡∏≤‡∏î‡πÑ‡∏ü‡∏•‡πå (5MB)
    if (file.size > 5 * 1024 * 1024) {
      showError('‡∏Ç‡∏ô‡∏≤‡∏î‡πÑ‡∏ü‡∏•‡πå‡∏ï‡πâ‡∏≠‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏¥‡∏ô 5MB');
      return;
    }

    setPaymentSlip(file);
    setSlipPreview(URL.createObjectURL(file));
  };

  const handleUploadSlip = async () => {
    if (!paymentSlip) {
      showWarning('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏ü‡∏•‡πå‡∏™‡∏•‡∏¥‡∏õ‡∏Å‡∏≤‡∏£‡πÇ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô');
      return;
    }

    setUploading(true);
    try {
      const formData = new FormData();
      formData.append('paymentSlip', paymentSlip);
      formData.append('bookingId', bookingId);

      await axios.post('http://localhost:5000/api/bookings/upload-payment-slip', formData, {
        headers: {
          'Content-Type': 'multipart/form-data'
        }
      });

      showSuccess('‡∏≠‡∏±‡∏û‡πÇ‡∏´‡∏•‡∏î‡∏™‡∏•‡∏¥‡∏õ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ‡∏£‡∏≠‡∏ú‡∏π‡πâ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö');
      
      // ‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á
      fetchBookingDetails();
    } catch (error) {
      console.error('Upload error:', error);
      showError(error.response?.data?.message || '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏û‡πÇ‡∏´‡∏•‡∏î');
    } finally {
      setUploading(false);
    }
  };



  if (loading) {
    return (
      <div>
        <Navbar />
        <PageTransition>
          <div className="flex justify-center items-center min-h-screen">
            <LoadingSpinner size="large" />
          </div>
        </PageTransition>
      </div>
    );
  }

  if (!booking) {
    return (
      <div>
        <Navbar />
        <PageTransition>
          <div className="text-center py-12">
            <h3 className="text-lg font-medium text-gray-900">‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á</h3>
            <button onClick={() => navigate('/dormitories')} className="mt-4 btn-primary">
              ‡∏Å‡∏•‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å
            </button>
          </div>
        </PageTransition>
      </div>
    );
  }

  return (
    <div>
      <Navbar />
      <PageTransition>
        <div className="min-h-screen bg-gray-50 py-4 sm:py-8">
          <div className="max-w-4xl mx-auto px-4">
            
            {/* Header */}
            <div className="text-center mb-8">
              <h1 className="text-3xl font-bold text-gray-900 mb-2">üí≥ ‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô</h1>
              <p className="text-gray-600">‡∏≠‡∏±‡∏û‡πÇ‡∏´‡∏•‡∏î‡∏´‡∏•‡∏±‡∏Å‡∏ê‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô</p>
            </div>



            {/* Payment Info */}
            <div className="bg-white p-6 rounded-lg shadow-md mb-6">
              <h3 className="font-bold text-gray-900 mb-4">üè¶ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡πÇ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô</h3>
              
              <div className="bg-blue-50 p-4 rounded-lg mb-4">
                <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                  <div>
                    <p className="text-sm text-gray-600">‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£</p>
                    <p className="font-medium">‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£‡∏Å‡∏£‡∏∏‡∏á‡πÑ‡∏ó‡∏¢</p>
                  </div>
                  <div>
                    <p className="text-sm text-gray-600">‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡∏ö‡∏±‡∏ç‡∏ä‡∏µ</p>
                    <p className="font-mono font-medium">123-4-56789-0</p>
                  </div>
                  <div>
                    <p className="text-sm text-gray-600">‡∏ä‡∏∑‡πà‡∏≠‡∏ö‡∏±‡∏ç‡∏ä‡∏µ</p>
                    <p className="font-medium">‡∏°‡∏´‡∏≤‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏•‡∏±‡∏¢‡πÄ‡∏ó‡∏Ñ‡πÇ‡∏ô‡πÇ‡∏•‡∏¢‡∏µ‡∏£‡∏≤‡∏ä‡∏°‡∏á‡∏Ñ‡∏•‡∏ò‡∏±‡∏ç‡∏ö‡∏∏‡∏£‡∏µ</p>
                  </div>
                  <div>
                    <p className="text-sm text-gray-600">‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÇ‡∏≠‡∏ô</p>
                    <p className="text-2xl font-bold text-green-600">
                      ‡∏ø{Number(booking.totalPrice || bookingData?.total_price || 0).toLocaleString()}
                    </p>
                  </div>
                </div>
              </div>

              <div className="bg-yellow-50 p-4 rounded-lg">
                <p className="text-yellow-800 text-sm">
                  üí° <strong>‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏:</strong> ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÇ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏ï‡∏≤‡∏°‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏ö‡∏∏‡πÑ‡∏ß‡πâ‡∏Ç‡πâ‡∏≤‡∏á‡∏ï‡πâ‡∏ô‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏á‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
                </p>
              </div>
            </div>

            {/* Upload Payment Slip */}
            <div className="bg-white p-6 rounded-lg shadow-md mb-6">
              <h3 className="font-bold text-gray-900 mb-4">üìé ‡∏≠‡∏±‡∏û‡πÇ‡∏´‡∏•‡∏î‡∏™‡∏•‡∏¥‡∏õ‡∏Å‡∏≤‡∏£‡πÇ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô</h3>
              
              {booking.payment_status === 'uploaded' ? (
                <div className="text-center py-8">
                  <div className="text-green-500 text-6xl mb-4">‚úÖ</div>
                  <h4 className="text-lg font-medium text-green-800 mb-2">‡∏≠‡∏±‡∏û‡πÇ‡∏´‡∏•‡∏î‡∏™‡∏•‡∏¥‡∏õ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß</h4>
                  <p className="text-green-700">‡∏£‡∏≠‡∏ú‡∏π‡πâ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô</p>
                </div>
              ) : booking.payment_status === 'paid' ? (
                <div className="text-center py-8">
                  <div className="text-green-500 text-6xl mb-4">üéâ</div>
                  <h4 className="text-lg font-medium text-green-800 mb-2">‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à</h4>
                  <p className="text-green-700">‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÅ‡∏•‡πâ‡∏ß</p>
                </div>
              
              ) : (
                <div className="space-y-4">
                  <div>
                    <label className="block text-sm font-medium text-gray-700 mb-2">
                      ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏ü‡∏•‡πå‡∏™‡∏•‡∏¥‡∏õ‡∏Å‡∏≤‡∏£‡πÇ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô *
                    </label>
                    <input
                      type="file"
                      accept="image/*"
                      onChange={handleFileChange}
                      className="block w-full text-sm text-gray-500 file:mr-4 file:py-2 file:px-4 file:rounded-full file:border-0 file:text-sm file:font-medium file:bg-blue-50 file:text-blue-700 hover:file:bg-blue-100"
                    />
                    <p className="text-xs text-gray-500 mt-1">
                      ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡πÑ‡∏ü‡∏•‡πå: JPEG, PNG ‡∏Ç‡∏ô‡∏≤‡∏î‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏¥‡∏ô 5MB
                    </p>
                  </div>

                  {/* Preview */}
                  {slipPreview && (
                    <div className="mt-4">
                      <p className="text-sm font-medium text-gray-700 mb-2">‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏™‡∏•‡∏¥‡∏õ</p>
                      <div className="max-w-xs mx-auto">
                        <img
                          src={slipPreview}
                          alt="Payment slip preview"
                          className="w-full h-auto rounded-lg border"
                        />
                      </div>
                    </div>
                  )}

                  <LoadingButton
                    onClick={handleUploadSlip}
                    loading={uploading}
                    disabled={!paymentSlip}
                    className="w-full btn-primary text-lg py-3"
                  >
                    üì§ ‡∏≠‡∏±‡∏û‡πÇ‡∏´‡∏•‡∏î‡∏™‡∏•‡∏¥‡∏õ
                  </LoadingButton>
                </div>
              )}
            </div>

            {/* QR Code (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ) */}
            <div className="bg-white p-6 rounded-lg shadow-md mb-6">
              <h3 className="font-bold text-gray-900 mb-4">üì± QR Code ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÇ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô</h3>
              <div className="text-center">
                <div className="inline-block p-4 bg-gray-200 rounded-lg">
                  <div className="w-48 h-48 bg-white rounded flex items-center justify-center">
                    <p className="text-gray-500 text-sm">QR Code<br/>PromptPay</p>
                  </div>
                </div>
                <p className="text-sm text-gray-600 mt-2">‡∏™‡πÅ‡∏Å‡∏ô QR Code ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÇ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô</p>
              </div>
            </div>

            {/* Booking Summary */}
            <div className="bg-white p-6 rounded-lg shadow-md">
              <h3 className="font-bold text-gray-900 mb-4">üìã ‡∏™‡∏£‡∏∏‡∏õ‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á</h3>
              <div className="space-y-2 text-sm">
                <div className="flex justify-between">
                  <span>‡∏´‡πâ‡∏≠‡∏á:</span>
                  <span className="font-medium">‡∏´‡πâ‡∏≠‡∏á {roomData?.room_number} ({roomData?.roomType?.room_type_name})</span>
                </div>
                <div className="flex justify-between">
                  <span>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡∏û‡∏±‡∏Å:</span>
                  <span className="font-medium">{new Date(booking?.checkInDate || bookingData?.check_in_date).toLocaleDateString('th-TH')}</span>
                </div>
                <div className="flex justify-between">
                  <span>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏≠‡∏≠‡∏Å:</span>
                  <span className="font-medium">{new Date(booking?.checkOutDate || bookingData?.check_out_date).toLocaleDateString('th-TH')}</span>
                </div>
                <div className="flex justify-between pt-2 border-t">
                  <span className="font-medium">‡∏£‡∏≤‡∏Ñ‡∏≤‡∏£‡∏ß‡∏°:</span>
                  <span className="text-lg font-bold text-green-600">
                    ‡∏ø{Number(booking?.totalPrice || bookingData?.total_price || 0).toLocaleString()}
                  </span>
                </div>
              </div>
            </div>

            {/* Back Button */}
            <div className="mt-6 text-center">
              <button
                onClick={() => navigate('/booking-details', { state: { bookingId } })}
                className="text-blue-600 hover:text-blue-800 underline"
              >
                ‚Üê ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á
              </button>
            </div>
          </div>
        </div>
      </PageTransition>
      
      <ToastContainer notifications={notifications} />
    </div>
  );
};

export default Payment;
